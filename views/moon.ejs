<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Language" content="zh-cn" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport"
        content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">

    <link href="/images/moon.ico" rel="shortcut icon" type="image/x-icon">
    <link rel='stylesheet' href='/stylesheets/moon.css' />

    <title><%= title %></title>
</head>

<body>
    <div class="musicbox">
        <div class="musiclist">
            <ul id="musics">
                <% musics.forEach(function(music) { %>
                <li title="<%= music.name %>" type="<%= music.type %>"> <%= music.name %> </li>
                <% }); %>
            </ul>
            <div class="control">
                <div class="volume">
                    <div class="vol-block" id="vol-block">
                        <div class="vol-val" id="vol-val" val="100"></div>
                        <div class="slide-block" id="slide-block">
                            <div class="tips" id="tips">100</div>
                        </div>
                    </div>
                </div>
                <div class="buttons">
                    <div class="btn">
                        <img src="/images/prev.png" id="prev">
                    </div>
                    <div class="btn">
                        <img src="/images/play.png" status="0" id="play_pause">
                    </div>
                    <div class="btn">
                        <img src="/images/next.png" id="next">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <canvas id="canvas-view" style="z-index:4"></canvas>
    <canvas id="canvas-stars" style="z-index: 0"></canvas>
    <canvas id="canvas-moon" style="z-index: 3"></canvas>
    <canvas id="canvas-drop" style="z-index: 5"></canvas>
    <canvas id="canvas-heart" style="z-index: 5"></canvas>
</body>
<script src="https://unpkg.com/popmotion/dist/popmotion.global.min.js"></script>
<script type='text/javascript' src="/javascripts/base.js"></script>
<script type="text/javascript" src="/javascripts/draw.js"></script>
<script type="text/javascript" src="/javascripts/moon.js"></script>

<script>
    var activeKey = true;//音量控制
    var danceKey = true;//按钮控制
    var nextKey;//自动下一首歌
    window.onload = function () {
        loopMeteor() //不定时添加  流星
        drawMoveStars() //绘制移动星星 及流星
        drawStaticStars() //绘制静态的星星
        visualizer() //获得音频数据
        init()
        // dropRain()
        springing($("#prev"))
        springing($("#play_pause"))
        springing($("#next"))
        var musiclist = $("#musics li")
        for (let i in musiclist) {
            musiclist[i].onclick = function () {
                for (let j in musiclist) {
                    musiclist[j].className = ""
                }
                //播放单曲
                musicLoading()
                this.className = "play"
                musicPlay({
                    title: this.title,
                    type: this.type
                })
            }
        }
        //音量控制
        var startx, moveStart = false
        $("#vol-block").onmousedown = function (e) {
            startx = e.clientX
            moveStart = true;
            let offsetx = e.clientX - startx
            let thisLeft = startx - 40 + offsetx
            $("#slide-block").style.left = thisLeft - 7.5 + "px"
            $("#vol-val").style.width = thisLeft + "px"
            let val = parseInt(thisLeft / 152.5 * 100)
            $("#tips").innerHTML = val
            gainNode.gain.value = val / 100
            $("#tips").style.display = "block"
        }
        $(".control").onmouseup = function () {
            moveStart = false;
            $("#tips").style.display = "none"
        }
        $(".control").onmouseleave = function () {
            moveStart = false;
            activeKey = true
            $("#tips").style.display = "none"
        }
        $("body").onmousemove = function (e) {
            let offsetx = e.clientX - startx
            if (moveStart) {
                let thisLeft = startx - 40 + offsetx
                thisLeft <= 0 ? thisLeft = 0 : thisLeft = thisLeft
                thisLeft >= 152.5 ? thisLeft = 152.5 : thisLeft = thisLeft
                $("#slide-block").style.left = thisLeft - 7.5 + "px"
                $("#vol-val").style.width = thisLeft + "px"
                let val = parseInt(thisLeft / 152.5 * 100)
                $("#tips").innerHTML = val
                gainNode.gain.value = val / 100
                $("#tips").style.display = "block"
            }
        }
        $(".control").onmouseenter = function () {
            activeKey = false
            // rotate(prevBtn, 0)
            window.clearInterval(window.degInterval)
        }
        //点击播放
        $("#play_pause").onclick = function () {
            let status = parseInt(this.getAttribute("status"))
            let playing = $(".play")
            if (playing.length == 0) {
                randomMusic()
            } else {
                if (status == 0) {
                    this.src = "/images/pause.png"
                    this.setAttribute("status", 1)
                    AC.resume();
                } else {
                    this.src = "/images/play.png"
                    this.setAttribute("status", 0)
                    AC.suspend();
                }
            }
        }
        //下一首
        $("#next").onclick = function () {
            //js 把空行看做一个节点 </br>
            let playing = $(".play")
            if (playing.length == 0) {
                randomMusic()
            } else {
                nextMusic()
            }
        }
        //上一首
        $("#prev").onclick = function () {
            let playing = $(".play")
            if (playing.length == 0) {
                randomMusic()
            } else {
                prevMusci()
            }
        }
    }
</script>
<script>
    var blessing = String('祝,黎,允,婷,19,岁,生,日,快,乐').split(',')
    var BODY_WIDTH, BODY_HEIGHT
    var CANVAS = $('#canvas-drop')
    var CANVAS_H = $('#canvas-heart')
    var CTX = CANVAS.getContext('2d')
    var CTX_H =  CANVAS_H.getContext('2d')
    var rippleList = new Array()
    var dropList = new Array()
    var heartList = new Array()
    var beginAnm = false
    var beginAnmH = false
    function init() {
      BODY_WIDTH = $('body').clientWidth
      BODY_HEIGHT = $('body').clientHeight
      CANVAS.width = BODY_WIDTH
      CANVAS.height = BODY_HEIGHT    
      CANVAS_H.width = BODY_WIDTH
      CANVAS_H.height = BODY_HEIGHT
      musicPlay({
          title: 'srkl',
          type: 'm4a'
      }, dropRain)
    }
    function dropRain(){
      let num = blessing.length
      let count = 0
      let itv = setInterval(()=>{
        let x = random(0, 50) + count * 150 + 200
        let y = random(0, 150)
        dropList.push(new Drop(x, y, count))
        if(!beginAnm){
          drawAll()
        }
        count++
        if (count >= num){
          window.clearInterval(itv)
        }
      }, 50)
    }
    // 水珠
    function Drop (x, y, num) {
      this.x = x
      this.y = y
      this.sh = random(600, BODY_WIDTH < 500 ? 200 : 700) // 距离水面高度
      this.eh = this.y + this.sh // 水面位置
      this.r = random(2, 4)
      this.v = 0
      this.av = 9.8 / 60
      this.state = 0 // 0 下落阶段 1 上升和再次下落阶段
      this.die = false
      this.num = num
      this.draw = function () {
        CTX.beginPath()
        CTX.arc(this.x - this.r, this.y - this.r, this.r, 0, Math.PI * 2)
        CTX.fillStyle="#fff"
        CTX.fill()
        if (this.state === 0) {
          this.v += this.av
          this.y = this.y + this.v
          if (this.y >= this.eh) { // 进入上升阶段
            createRipples(this.x, this.eh, this.r)
            createHeart(this.x, this.eh, this.num)
            this.state = 1
          }
        }
        if (this.state === 1) {
          this.v -= this.av*3
          this.y = this.y - this.v
          if (this.y >= this.eh) { // 死亡
            createRipples(this.x, this.eh, this.r)
            this.die = true
          }
        }
      }
    }
    
    $("body").onclick=function(e){
      let drop = new Drop(e.offsetX, e.offsetY)
      dropList.push(drop)
      if(!beginAnm){// 如果没有动画执行 则执行
        drawAll()
      }
    }
      // 绘画
    function drawAll() {
      beginAnm = true // 设置动画key 为true
      CTX.clearRect(0,0,BODY_WIDTH,BODY_HEIGHT) // 先清除上一帧的所有内容
      window.anm = requestAnimationFrame(drawAll) // window自带的动画执行函数
      if (rippleList.length === 0 && dropList.length === 0 && beginAnm) { // 如果小球数组没有任何一个小球，且动画还在执行就清除动画
        window.cancelAnimationFrame(anm)
        beginAnm = false
      }
      dropList.forEach((e, i) => { // 遍历所有小球
        e.draw() // 执行绘画
        if(e.die){ // 小球死亡就删除小球
          dropList.splice(i, 1)
        }
      })
      rippleList.forEach((e, i)=>{
        e.draw()
        if (e.die){
          rippleList.splice(i, 1)
        }
      })
    }
    // 创建一圈涟漪
    function Ripple (x, y, r) {
      this.rate = 0
      this.velocity = 5 / 100
      this.ap = 1
      this.die = false
      this.r = r
      this.draw = function () {
        CTX.beginPath()
        CTX.globalAlpha = this.ap
        CTX.ellipse(x, y,30*this.rate,10*this.rate,0,0, Math.PI * 2)
        if (this.rate > this.r) {
          this.ap = this.ap - .03
        }
        if (this.ap <= 0) {
          this.die = true
        }
        CTX.lineWidth = 2
        CTX.strokeStyle = "rgba(241,158,194,.5)"
        CTX.stroke()
        this.rate += this.velocity
        this.velocity = this.velocity - .00005
      }
    }// 涟漪 
    function createRipples(x = BODY_WIDTH/2, y = BODY_HEIGHT/2, r = 2){
      // 该方法默认 x y 为屏幕中间。 r 半径率为2
      rippleList.push(new Ripple(x, y, r))
      let count = 0
      let num = random(2, 4) // 随机 增加 2 到 4圈涟漪
      let itv = setInterval(() => {
        count++
        if (count >= num) {
          window.clearInterval(itv)
        }
        rippleList.push(new Ripple(x, y, r))
      }, 600) // 每隔0.8s 向该组添加一圈涟漪
    }
  
    function Heart(X, Y, num) {
      this.rate = random((BODY_WIDTH < 500 ? 50 : 60), 100) / 100
      this.size = 200 * this.rate
      this.X = X
      this.Y = Y
      this.num = num
      this.angle = 10
      this.ap = 1
      this.die = false
      this.cvs = createHC(this.size)
      this.txtClr = 'hsl(' + random(0, 360) + ', 61%, 33%)'
      this.ctx = this.cvs.getContext('2d')
      this.draw = function() {
        var t = parseFloat(this.angle / Math.PI)
        var x = parseFloat(3.9 * (16 * Math.pow(Math.sin(t), 3)) + 100) * this.rate
        var y = parseFloat(-4 * (13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t)) + 100) * this.rate
        this.ctx.globalAlpha = .02 // 爱心边缘的透明度
        this.ctx.lineTo(x, y)	// 指挥画笔移动到计算得出
        this.ctx.lineJoin = "round"
        this.ctx.strokeStyle = `rgba(241,158,194, ${this.ap})`
        this.ctx.stroke()
        this.angle += .3
        if (this.angle > 30) {
          this.die = true
        }
        if (this.die) {
          this.ctx.fillStyle = `rgba(241,158,194, ${this.ap})`
          this.ctx.fill()
  
          this.ap -= .003
          if (this.Y > 100) {
            this.Y -= random(5, 15) / 10
          }
        }
        // 当前爱心的透明度
        CTX_H.globalAlpha = this.ap
        // 把上面绘画好的东西再次放到
        if (this.Y > 100) {
          CTX_H.drawImage(this.cvs, this.X - 100 * this.rate, this.Y - 170 * this.rate, this.size, this.size)
        }
  
        CTX_H.globalAlpha = 1-this.ap
        CTX_H.font = "30px bold 黑体"
        CTX_H.textAlign = "center"
        CTX_H.textBaseline = "bottom"
        CTX_H.fillStyle = this.txtClr
        CTX_H.fillText( blessing[num], this.X,  this.Y - (50 * this.rate))
      }
    }
  
    function createHC(size){
      let c = document.createElement("canvas")
      c.height = size
      c.width = size
      return c
    }
    function createHeart(x, y, num) {
      heartList.push(new Heart(x, y, num))
      if(!beginAnmH){
        drawAllHeart()
      }
    }
    function drawAllHeart(){
      beginAnmH = true
      CTX_H.clearRect(0,0,BODY_WIDTH,BODY_HEIGHT)
      window.fm0 = window.requestAnimationFrame(drawAllHeart)
      if (heartList.length === 0 && beginAnmH) {
        window.cancelAnimationFrame(fm0)
        beginAnmH = false
      }
      heartList.forEach((e, i) => {
        e.draw()
  
        // if(e.ap <= 0){
        //   heartList.splice(i, 1)
        // }
      })
    }
</script>
</html>